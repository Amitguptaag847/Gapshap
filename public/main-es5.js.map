{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/main/left/add-contact/add-contact.component.ts","webpack:///src/app/components/main/left/add-contact/add-contact.component.html","webpack:///src/app/components/main/left/left.component.ts","webpack:///src/app/components/main/left/left.component.html","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/main/right/right.component.ts","webpack:///src/app/components/main/right/right.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/data.service.ts","webpack:///src/app/user.model.ts","webpack:///src/app/web-socket.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","_http","devUri","prodUri","uri","body","post","observe","token","localStorage","getItem","headersObject","set","get","headers","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LoginComponent","apiservice","router","formBuilder","errors","phonenumber","password","logForm","group","required","logData","submitLogin","subscribe","data","Object","forEach","key","setItem","navigate","err","error","onSubmit","AddContactComponent","webSocketService","dataService","success","message","currentUserInfoChange","value","currentUserInfo","authonicateUser","addForm","addData","addContact","emit","LeftComponent","apiService","allContacts","selectedUser","getAllContactsFromServer","selectedUserChange","allContactsChange","user","setSelectedUser","listen","amOnline","updateOnlineStatus","setAllContacts","length","flag","temp","getAllContacts","t","index","contactId","online","setCurrentUser","logout","MainComponent","RightComponent","currentChat","loaded","messageForm","tempData","updateChatChange","push","reloadChatChange","len","time","updateContact","trim","reset","updateChat","contact","lastMessage","reloadChat","scrollToBottom","scrollBottom","nativeElement","scrollTop","scrollHeight","sendMessage","RegisterComponent","name","re_password","regForm","regData","submitRegister","DataService","perticularContactChange","chat","next","contacts","cts","sort","compare","a","b","User","WebSocketService","socket","eventName","subscriber","on","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  devUri: string = 'http://localhost:8080';\n  prodUri: string = 'https://pacific-earth-40664.herokuapp.com';\n  uri = this.prodUri;\n\n  token: string;\n\n  headersObject: any;\n\n  constructor(private _http: HttpClient) { }\n\n  submitRegister(body: any) {\n    return this._http.post(this.uri + '/api/users/register', body, {\n      observe: 'body'\n    });\n  }\n\n  submitLogin(body: any) {\n    return this._http.post(this.uri + '/api/users/login', body, {\n      observe: 'body'\n    });\n  }\n\n  addContact(body: any) {\n    return this._http.post(this.uri + '/api/users/addcontact', body, {\n      observe: 'body'\n    });\n  }\n\n  authonicateUser() {\n    this.token = localStorage.getItem('token');\n    this.headersObject = new HttpHeaders().set('Authorization', this.token);\n    return this._http.get(this.uri + '/api/users/verify', {\n      observe: 'body',\n      headers: this.headersObject\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { MainComponent } from './components/main/main.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: RegisterComponent },\n  { path: 'main', component: MainComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'client';\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { MainComponent } from './components/main/main.component';\nimport { LeftComponent } from './components/main/left/left.component';\nimport { RightComponent } from './components/main/right/right.component';\n\nimport { WebSocketService } from './web-socket.service';\nimport { ApiService } from './api.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddContactComponent } from './components/main/left/add-contact/add-contact.component';\nimport { DataService } from './data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    MainComponent,\n    LeftComponent,\n    RightComponent,\n    AddContactComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    WebSocketService,\n    ApiService,\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/api.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css', 'assets/fonts/material-icon/css/material-design-iconic-font.min.css']\n})\nexport class LoginComponent implements OnInit {\n\n  logForm: FormGroup;\n  token: string;\n  errors: any = {\n    phonenumber: '',\n    password: ''\n  };\n\n  onSubmit(logData) {\n    this.errors.phonenumber = '';\n    this.errors.password = '';\n    this.apiservice.submitLogin(logData)\n      .subscribe(\n        data => {\n          Object.keys(data).forEach(key => {\n            localStorage.setItem(key, data[key]);\n          });\n          this.router.navigate(['/main']);\n        },\n        err => {\n          Object.keys(err.error).forEach(key => {\n            this.errors[key] = err.error[key];\n          });\n        });\n  }\n\n  constructor(private apiservice: ApiService, private router: Router, private formBuilder: FormBuilder) {\n    this.logForm = this.formBuilder.group({\n      phonenumber: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"main\">\n    <section class=\"sign-in position-center\">\n        <div class=\"container\">\n            <div class=\"signin-content\">\n                <div class=\"signin-image\">\n                    <figure><img src=\"../../../assets/images/signin-image.jpg\" alt=\"sing up image\"></figure>\n                    <a routerLink=\"/signup\" class=\"signup-image-link\">Create an account</a>\n                </div>\n\n                <div class=\"signin-form\">\n                    <h2 class=\"form-title\">Log in</h2>\n                    <form [formGroup]=\"logForm\" (ngSubmit)=\"onSubmit(logForm.value)\" class=\"register-form\" id=\"login-form\">\n                        <div class=\"form-group\">\n                            <label for=\"number\"><i class=\"zmdi zmdi-smartphone\"></i></label>\n                            <input type=\"number\" formControlName=\"phonenumber\" name=\"phonenumber\" id=\"phonenumber\" placeholder=\"Phone Number\" />\n                        </div>\n                        <div class=\"text-danger\"  style=\"height: 25px\">\n                            {{ errors.phonenumber }}\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"pass\"><i class=\"zmdi zmdi-lock\"></i></label>\n                            <input type=\"password\" formControlName=\"password\" name=\"password\" id=\"pass\" placeholder=\"Password\" />\n                        </div>\n                        <div class=\"text-danger\"  style=\"height: 25px\">\n                            {{ errors.password }}\n                        </div>\n                        <div class=\"form-group form-button\">\n                            <input type=\"submit\" name=\"signin\" id=\"signin\" class=\"form-submit\" value=\"Log in\" [disabled]=\"!logForm.valid\"/>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </section>\n</div>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/api.service';\nimport { DataService } from 'src/app/data.service';\nimport { User } from 'src/app/user.model';\nimport { WebSocketService } from 'src/app/web-socket.service';\n\n@Component({\n  selector: 'app-add-contact',\n  templateUrl: './add-contact.component.html',\n  styleUrls: ['./add-contact.component.css']\n})\nexport class AddContactComponent implements OnInit {\n\n  currentUserInfo: User;\n\n  addForm: FormGroup;\n\n  errors: any = {\n    phonenumber: ''\n  };\n  success: any = {\n    message: ''\n  };\n\n  onSubmit(addData) {\n    if (addData.phonenumber == this.currentUserInfo.phonenumber) {\n      this.errors.phonenumber = 'You can not add your own number';\n      return;\n    }\n    this.errors.phonenumber = '';\n    this.success.message = '';\n    addData.id = this.currentUserInfo.id;\n    this.apiservice.addContact(addData)\n      .subscribe(\n        data => {\n          this.success.message = 'Contact created';\n          this.webSocketService.emit('getAllContact', this.currentUserInfo.id);\n          this.webSocketService.emit('updateContact', data);\n        },\n        err => {\n          Object.keys(err.error).forEach(key => {\n            this.errors[key] = err.error[key];\n          });\n        });\n  }\n\n  constructor(private webSocketService: WebSocketService, private apiservice: ApiService, private dataService: DataService, private router: Router, private formBuilder: FormBuilder) {\n    this.dataService.currentUserInfoChange.subscribe(value => { this.currentUserInfo = value; });\n    this.apiservice.authonicateUser()\n      .subscribe(\n        data => {\n        },\n        err => {\n          this.router.navigate(['/login']);\n        }\n      );\n\n    this.addForm = this.formBuilder.group({\n      phonenumber: [null, Validators.required]\n    });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal-dialog modal-sm\" role=\"document\">\n    <div class=\"modal-content\">\n        <div class=\"modal-body\">\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            <form [formGroup]=\"addForm\">\n                <input type=\"number\" class=\"w-100 input\" placeholder=\"Phone number\" formControlName=\"phonenumber\" name=\"phonenumber\"/>\n            </form>\n            <p class=\"text-danger mt-2\">{{ errors.phonenumber }}</p>\n            <p class=\"text-success mt-2\">{{ success.message }}</p>\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit(addForm.value)\">Add</button>\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WebSocketService } from 'src/app/web-socket.service';\nimport { User } from 'src/app/user.model';\nimport { DataService } from 'src/app/data.service';\nimport { ApiService } from 'src/app/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-left',\n  templateUrl: './left.component.html',\n  styleUrls: ['./left.component.css']\n})\nexport class LeftComponent implements OnInit {\n\n  currentUserInfo: User = new User('', '', null, '', '', null, true);\n  allContacts: User[] = [];\n\n  selectedUser: User = null;\n\n  constructor(private webSocketService: WebSocketService, private dataService: DataService, private apiService: ApiService, private router: Router) {\n    this.dataService.currentUserInfoChange.subscribe(value => {\n      this.currentUserInfo = value;\n      this.getAllContactsFromServer();\n    });\n    this.dataService.selectedUserChange.subscribe(value => {\n      this.selectedUser = value;\n    });\n    this.dataService.allContactsChange.subscribe(value => {\n      this.allContacts = value;\n    });\n  }\n\n  getAllContactsFromServer() {\n    this.webSocketService.emit('getAllContact', this.currentUserInfo.id);\n  }\n\n  changeSelectedUser(user) {\n    this.dataService.setSelectedUser(user);\n  }\n\n  ngOnInit(): void {\n    this.webSocketService.listen('isOnline')\n      .subscribe((data) => {\n        this.amOnline(data);\n      });\n    this.webSocketService.listen('amOnline')\n      .subscribe((data) => {\n        this.updateOnlineStatus(data);\n      });\n    this.webSocketService.listen('getAllContact')\n      .subscribe((data) => {\n        this.dataService.setAllContacts(data);\n        if (this.selectedUser == null && this.allContacts.length !== 0) {\n          this.dataService.setSelectedUser(this.allContacts[0]);\n        }\n      });\n    this.webSocketService.listen('updateContact')\n      .subscribe(flag => {\n        if (flag) {\n          this.getAllContactsFromServer();\n        }\n      });\n  }\n\n  amOnline(data) {\n    this.webSocketService.emit('amOnline', data);\n  }\n\n  updateOnlineStatus(data) {\n    let temp = this.dataService.getAllContacts();\n    temp.forEach((t, index) => {\n      if (t.contactId === data.id) {\n        temp[index].online = data['online'];\n      }\n    });\n    this.dataService.setAllContacts(temp);\n  }\n\n  logout() {\n    localStorage.setItem('token', '');\n    this.apiService.authonicateUser()\n      .subscribe(\n        data => {\n          this.dataService.setCurrentUser(data);\n        },\n        err => {\n          this.router.navigate(['/login']);\n        }\n      );\n  }\n}\n","<div id=\"sidepanel\">\n    <div id=\"profile\">\n        <div class=\"wrap\">\n            <img id=\"profile-img\" src=\"../../../../assets/images/cool.jpg\" class=\"online\" alt=\"\" />\n            <p>{{ currentUserInfo.name }}</p>\n            <div id=\"status-options\">\n                <ul>\n                    <li id=\"status-online\" class=\"active\"><span class=\"status-circle\"></span>\n                        <p>Online</p>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div id=\"search\">\n        <label for=\"\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i></label>\n        <input type=\"text\" placeholder=\"Search contacts...(Not Working)\" disabled/>\n    </div>\n    <div id=\"contacts\">\n        <ul>\n            <li *ngFor=\"let contact of allContacts\" class=\"contact\" [ngClass]=\"{'active': selectedUser.contactId == contact.contactId}\" (click)=\"changeSelectedUser(contact)\">\n                <div class=\"wrap\">\n                    <span class=\"contact-status\" [ngClass]=\"{'online': contact.online}\"></span>\n                    <img src=\"../../../../assets/images/cool.jpg\" alt=\"\" />\n                    <div class=\"meta\">\n                        <p class=\"name\">{{ contact.name }}</p>\n                        <p *ngIf=\"(contact.lastMessage)\"class=\"preview\">{{ contact.lastMessage }}</p>\n                        <p *ngIf=\"!(contact.lastMessage)\" class=\"preview text-warning\">Say Hi to your friend!!!</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div id=\"bottom-bar\">\n        <button data-toggle=\"modal\" data-target=\".bd-example-modal-sm\" id=\"addcontact\">\n            <i class=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\"></i> <span>Add contact</span>\n        </button>\n        <div class=\"modal fade bd-example-modal-sm\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\"\n            aria-hidden=\"true\">\n            <app-add-contact></app-add-contact>\n        </div>\n        <button (click)=\"logout()\" id=\"settings\"><i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i> <span>Logout</span></button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../api.service';\nimport { Router } from '@angular/router';\nimport { DataService } from 'src/app/data.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  data: any;\n\n  constructor(private apiservice: ApiService, private dataService: DataService, private router: Router) {\n  }\n  ngOnInit(): void {\n    this.apiservice.authonicateUser()\n      .subscribe(\n        data => {\n          this.dataService.setCurrentUser(data);\n        },\n        err => {\n          this.router.navigate(['/login']);\n        }\n      );\n  }\n\n}\n","<div id=\"body\">\n    <div id=\"frame\">\n        <app-left></app-left>\n        <app-right></app-right>\n    </div>\n</div>","import { AfterViewChecked, ElementRef, ViewChild, Component, OnInit } from '@angular/core';\nimport { WebSocketService } from 'src/app/web-socket.service';\nimport { User } from 'src/app/user.model';\nimport { DataService } from 'src/app/data.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-right',\n  templateUrl: './right.component.html',\n  styleUrls: ['./right.component.css']\n})\nexport class RightComponent implements OnInit, AfterViewChecked {\n  @ViewChild('scrollBottom') private scrollBottom: ElementRef;\n\n  currentUserInfo: User = new User('', '', null, '', '', null, true);\n  selectedUser: User = new User('', '', null, '', '', null, false);\n  currentChat = [];\n  loaded = false;\n  messageForm: FormGroup;\n\n  sendMessage(message: string) {\n    if (message != null && message.trim() !== '') {\n      this.messageForm.reset();\n      const tempData = {\n        id: this.currentUserInfo.id,\n        contactId: this.selectedUser.contactId,\n        message: message.trim()\n      };\n      this.webSocketService.emit('newMessage', tempData);\n    }\n  }\n\n  constructor(private webSocketService: WebSocketService, private dataService: DataService, private formBuilder: FormBuilder) {\n    this.messageForm = this.formBuilder.group({\n      message: [null, Validators.required]\n    });\n    this.dataService.currentUserInfoChange.subscribe(value => {\n      this.currentUserInfo = value;\n    });\n    this.dataService.selectedUserChange.subscribe(value => {\n      this.selectedUser = value;\n      this.currentChat = [];\n      this.loaded = false;\n      const tempData = {\n        contactId: this.selectedUser.contactId\n      };\n      this.webSocketService.emit('reloadChat', tempData);\n    });\n    this.dataService.updateChatChange.subscribe(value => {\n      if (this.loaded === false) {\n        this.currentChat.push(value);\n      }\n    });\n    this.dataService.reloadChatChange.subscribe(value => {\n      this.loaded = true;\n      this.currentChat = value;\n      const len = value.length;\n      const temp = {\n        id: value[len - 1].id,\n        message: value[len - 1].message,\n        time: value.time\n      };\n      this.dataService.updateContact(temp);\n    });\n  }\n\n  ngOnInit(): void {\n    this.webSocketService.listen('newMessage')\n      .subscribe((data) => {\n        if (this.selectedUser.contactId === data['contactId']) {\n          this.dataService.updateChat(data);\n        }\n        let allContacts = this.dataService.getAllContacts();\n        allContacts.forEach((contact, index) => {\n          if (contact.contactId === data['contactId']) {\n            allContacts[index].lastMessage = data['message'];\n            allContacts[index].time = data['time'];\n          }\n        });\n        this.dataService.setAllContacts(allContacts);\n      });\n\n    this.webSocketService.listen('reloadChat')\n      .subscribe((data: any[]) => {\n        if (data.length !== 0) {\n          this.dataService.reloadChat(data);\n        }\n      });\n    this.scrollToBottom();\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom(): void {\n    try {\n      this.scrollBottom.nativeElement.scrollTop = this.scrollBottom.nativeElement.scrollHeight;\n    } catch (err) { }\n  }\n\n}\n","<div class=\"content\">\n    <div class=\"contact-profile\">\n        <img *ngIf=\"selectedUser.name\" src=\"../../../../assets/images/cool.jpg\" alt=\"\" />\n        <p>{{selectedUser.name}}</p>\n    </div>\n    <div class=\"messages\">\n        <ul #scrollBottom>\n            <li *ngFor=\"let chat of currentChat\"\n                [ngClass]=\"{'sent':chat.senderId !== currentUserInfo.id, 'replies':chat.senderId === currentUserInfo.id}\">\n                <img src=\"../../../../assets/images/cool.jpg\" alt=\"\" />\n                <p>{{chat.message}}</p>\n            </li>\n        </ul>\n    </div>\n    <div class=\"message-input\">\n        <div class=\"wrap\">\n            <form autocomplete=\"off\" [formGroup]=\"messageForm\" (ngSubmit)=\"sendMessage(messageForm.value.message)\">\n                <input autocomplete=\"off\" type=\"text\" formControlName=\"message\" name=\"message\" placeholder=\"Write your message...\" />\n                <i class=\"fa fa-paperclip attachment\" aria-hidden=\"true\"></i>\n                <button class=\"submit\"><i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i></button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/api.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css', 'assets/fonts/material-icon/css/material-design-iconic-font.min.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  regForm: FormGroup;\n  errors: any = {\n    name: '',\n    phonenumber: '',\n    password: '',\n    re_password: ''\n  };\n\n  onSubmit(regData) {\n    this.errors.name = '';\n    this.errors.phonenumber = '';\n    this.errors.password = '';\n    this.errors.re_password = '';\n    this.apiservice.submitRegister(regData)\n      .subscribe(\n        data => {\n          this.router.navigate(['/login']);\n        },\n        err => {\n          Object.keys(err.error).forEach(key => {\n            this.errors[key] = err.error[key];\n          });\n        });\n  }\n\n  constructor(private apiservice: ApiService, private router: Router, private formBuilder: FormBuilder) {\n    this.regForm = this.formBuilder.group({\n      name: [null, Validators.required],\n      phonenumber: [null, Validators.required],\n      password: [null, Validators.required],\n      re_password: [null, Validators.required]\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"main\">\n    <section class=\"signup position-center\">\n        <div class=\"container\">\n            <div class=\"signup-content\">\n                <div class=\"signup-form\">\n                    <h2 class=\"form-title\">Register</h2>\n                    <form [formGroup]=\"regForm\" (ngSubmit)=\"onSubmit(regForm.value)\" class=\"register-form\" id=\"register-form\">\n                        <div class=\"form-group\">\n                            <label for=\"name\"><i class=\"zmdi zmdi-account material-icons-name\"></i></label>\n                            <input type=\"text\" formControlName=\"name\" name=\"name\" id=\"name\" placeholder=\"Your Name\" />\n                        </div>\n                        <div class=\"text-danger\"  style=\"height: 25px\">\n                            {{ errors.name }}\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"number\"><i class=\"zmdi zmdi-smartphone\"></i></label>\n                            <input type=\"number\" formControlName=\"phonenumber\" name=\"phonenumber\" id=\"phonenumber\" placeholder=\"Phone Number\" />\n                        </div>\n                        <div class=\"text-danger\"  style=\"height: 25px\">\n                            {{ errors.phonenumber }}\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"pass\"><i class=\"zmdi zmdi-lock\"></i></label>\n                            <input type=\"password\" formControlName=\"password\" name=\"password\" id=\"pass\" placeholder=\"Password\" />\n                        </div>\n                        <div class=\"text-danger\"  style=\"height: 25px\">\n                            {{ errors.password }}\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"re-pass\"><i class=\"zmdi zmdi-lock-outline\"></i></label>\n                            <input type=\"password\" formControlName=\"re_password\" name=\"re_password\" id=\"re_pass\" placeholder=\"Repeat your password\" />\n                        </div>\n                        <div class=\"text-danger\"  style=\"height: 25px\">\n                            {{ errors.re_password }}\n                        </div>\n                        <div class=\"form-group form-button\">\n                            <input type=\"submit\" name=\"signup\" id=\"signup\" class=\"form-submit\" value=\"Register\" [disabled]=\"!regForm.valid\"/>\n                        </div>\n                    </form>\n                </div>  \n                <div class=\"signup-image\">\n                    <figure><img src=\"../../../assets/images/signup-image.jpg\" alt=\"sing up image\"></figure>\n                    <a routerLink=\"/login\" class=\"signup-image-link\">I am already member</a>\n                </div>\n            </div>\n        </div>\n    </section>\n</div>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { User } from './user.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  currentUserInfo: User;\n  currentUserInfoChange: Subject<User> = new Subject<User>();\n\n  selectedUser: User;\n  selectedUserChange: Subject<User> = new Subject<User>();\n\n  allContacts: User[] = [];\n  allContactsChange: Subject<any> = new Subject<any>();\n  perticularContactChange: Subject<any> = new Subject<any>();\n\n  chat: any = {};\n  updateChatChange: Subject<any> = new Subject<any>();\n  reloadChatChange: Subject<any> = new Subject<any>();\n\n  constructor() {\n    this.currentUserInfoChange.subscribe((value) => {\n      this.currentUserInfo = value;\n    });\n    this.selectedUserChange.subscribe((value) => {\n      this.selectedUser = value;\n    });\n    this.allContactsChange.subscribe((value) => {\n      this.allContacts = value;\n    });\n    this.updateChatChange.subscribe((value) => {\n      if (!(value.contactId in this.chat)) {\n        this.chat[value.contactId] = [];\n      }\n      this.chat[value.contactId].push(value);\n    });\n    this.reloadChatChange.subscribe((value) => {\n      if (value.length !== 0) {\n        this.chat[value[0].contactId] = value;\n      }\n    });\n  }\n\n  updateChat(data) {\n    this.updateChatChange.next(data);\n  }\n\n  reloadChat(data) {\n    this.reloadChatChange.next(data);\n  }\n\n  getAllContacts() {\n    return this.allContacts;\n  }\n\n  updateContact(contact) {\n    this.perticularContactChange.next(contact);\n  }\n\n  setAllContacts(contacts) {\n    let cts = contacts.sort(this.compare);\n    this.allContactsChange.next(cts);\n  }\n\n  setSelectedUser(user) {\n    this.selectedUserChange.next(user);\n  }\n\n  getSelectedUser() {\n    return this.selectedUser;\n  }\n\n  setCurrentUser(user) {\n    this.currentUserInfoChange.next(user);\n  }\n\n  getCurrentUser() {\n    return this.currentUserInfo;\n  }\n\n  compare(a, b) {\n    if (a.time < b.time) {\n      return 1;\n    }\n    if (a.time > b.time) {\n      return -1;\n    }\n    return 0;\n  }\n}\n","export class User {\n    id: string;\n    name: string;\n    phonenumber: number;\n    contactId: string;\n    lastMessage: string;\n    time: Date;\n    online: boolean;\n    constructor(id: string, name: string, phonenumber: number, contactId: string, lastMessage: string, time: Date, online: boolean) {\n        this.id = id;\n        this.name = name;\n        this.phonenumber = phonenumber;\n        this.contactId = contactId;\n        this.lastMessage = lastMessage;\n        this.time = time;\n        this.online = online;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable, Subscriber } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n\n  socket: any;\n\n  devUri: string = 'http://localhost:8080';\n  prodUri: string = 'https://pacific-earth-40664.herokuapp.com';\n  uri = this.prodUri;\n  constructor() {\n    this.socket = io(this.uri);\n  }\n\n  listen(eventName: string) {\n    return new Observable((subscriber) => {\n      this.socket.on(eventName, (data) => {\n        subscriber.next(data);\n      });\n    });\n  }\n\n  emit(eventName: string, data: any) {\n    this.socket.emit(eventName, data);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}